#include <stdio.h>
#include <limits.h>

#define N 4 // Number of cities

int graph[N][N] = {
    {0, 10, 15, 20},
    {10, 0, 35, 25},
    {15, 35, 0, 30},
    {20, 25, 30, 0}
};

int visited[N];
int min_cost = INT_MAX;

void tsp(int current_city, int visited_cities, int cost)
 {
    if (visited_cities == (1 << N) - 1) 
    { // All cities visited
        cost += graph[current_city][0]; // Return to the starting city
        if (cost < min_cost)
        {
            min_cost = cost;
        }
        return;
    }
    
    for (int next_city = 0; next_city < N; ++next_city)
     {
        if (!visited[next_city] && graph[current_city][next_city] != 0) 
        {
            visited[next_city] = 1;
            tsp(next_city, visited_cities | (1 << next_city), cost + graph[current_city][next_city]);
            visited[next_city] = 0;
        }
    }
}

int main() {
    visited[0] = 1; // Start from city 0
    tsp(0, 1, 0);   // Start with the first city
    
    printf("Minimum cost of TSP: %d\n", min_cost);
    
    return 0;
}
