#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define V 4
#define INF INT_MAX

int dist[V][V] = { { 0, 20, 42, 25 },
				   { 20, 0, 30, 34 },
				   { 42, 30, 0, 10 },
				   { 25, 34, 10, 0 } };

int dp[16][V];

int TSP(int mask, int pos) {
	if (mask == (1 << V) - 1)
		return dist[pos][0];

	if (dp[mask][pos] != -1)
		return dp[mask][pos];

	int ans = INF;
	for (int city = 0; city < V; city++) {
		if ((mask & (1 << city)) == 0) {
			int newAns = dist[pos][city] + TSP(mask | (1 << city), city);
			ans = min(ans, newAns);
		}
	}
	return dp[mask][pos] = ans;
}

int main() {
	for (int i = 0; i < (1 << V); i++)
		for (int j = 0; j < V; j++)
			dp[i][j] = -1;
	printf("Travelling Salesman Distance: %d", TSP(1, 0));
	return 0;
}
