#include <stdio.h>

#define MAX_ITEMS 100
#define MAX_CAPACITY 1000

int values[MAX_ITEMS];
int weights[MAX_ITEMS];
int dp[MAX_ITEMS + 1][MAX_CAPACITY + 1];

int max(int a, int b) {
    return (a > b) ? a : b;
}

int knapsack(int num_items, int capacity) {
    for (int i = 0; i <= num_items; ++i) {
        for (int w = 0; w <= capacity; ++w) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;
            } else if (weights[i - 1] <= w) {
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w]);
            } else {
                dp[i][w] = dp[i - 1][w];
            }
        }
    }
    return dp[num_items][capacity];
}

int main() {
    int num_items, capacity;

    printf("Enter the number of items: ");
    scanf("%d", &num_items);

    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);

    printf("Enter the values of the items:\n");
    for (int i = 0; i < num_items; ++i) {
        scanf("%d", &values[i]);
    }

    printf("Enter the weights of the items:\n");
    for (int i = 0; i < num_items; ++i) {
        scanf("%d", &weights[i]);
    }

    int max_value = knapsack(num_items, capacity);
    printf("Maximum value that can be obtained: %d\n", max_value);

    return 0;
}
